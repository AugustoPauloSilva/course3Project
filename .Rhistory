}
above10 <- function(x){
use <- x > 10
x[use]
}
above <- function(x,n=10){
use <- x > n
x[use]
}
above(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,1])
}
means
}
columnmean(airquality)
airquality
columnmean(airquality)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function(y,removeNA=TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i],na.rm = removeNA)
}
means
}
columnmean(airquality)
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(cls_list)
cls_list <- sapply(flags,class)
cls_vect <- sapply(flags,class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
sapply(flag_shapes,range)
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(sha)
class(shape_mat)
unique(c(3, 4, 5, 5,
| 5, 6, 6))
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags,unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
play
play()
nxt()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1)
)
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plant)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
nxt()
table(plants$Active_Growth_Period)
str(plants)
?sample()
?sample
sample(1:6,4replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,4)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5,10)
my_pois <- replicate(100,rpois(5,10))
my_pois
cm < -colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
library(swirl)
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$dist,y=cars$speed,xlab="Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
data("mtcars")
data(mtcars)
?boxplot
boxplot(formula=mpg~cyl)
boxplot(formula=mpg~cyl,data=mtcars)
hist(mtcars$mpg)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
install.packages(“RMySQL”, type = “source”)
install.packages(“RMySQL”, type = “source”)
install.packages("RMySQL", type = "source")
library(RMySQL)
library(RMySQL)
install.packages(“RMySQL”, type = “source”)
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
Sys.which("make")
Sys.which("make")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
Sys.getenv()['PATH']
install.packages("RMySQL", type = "source")
devtools::find_rtools()
Sys.which("ls.exe")
Sys.which("gcc.exe")
install.packages("RMySQL", type = "source")
Sys.which("gcc.exe")
Sys.which("ls.exe")
Sys.which("gcc.exe")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("jsonlite", type = "source")
install.packages("RMySQL", type = "source")
Sys.which("make")
Sys.which("ls.exe")
Sys.which("gcc.exe")
install.packages("RMySQL", type = "source")
Sys.which("gcc.exe")
Sys.which("gcc.exe")
Sys.which("ls.exe")
Sys.which("gcc.exe")
install.packages("RMySQL", type = "source")
usethis::edit_r_environ()
install.packages("usethis")
usethis::edit_r_environ()
?INSTALL
install.packages('xmlw')
rtools_path()
install.packages("devtools")
install.packages("devtools")
devtools::install_github("r-lib/pkgbuild")
has_rtools
has_rtools()
library(pkgbuild)
pkgbuild::rtools_path()
Sys.setenv(PATH = paste("C:\rtools40\usr\bin", Sys.getenv("PATH"), sep=";"))
Sys.which('make')
tools::Rcmd(c('config', 'CXX11'))
tools::Rcmd(c('config', 'CXX11'))
tools::Rcmd(c('config', 'CXX11'))
Sys.which('make')
Sys.which('make')
Sys.which("ls.exe")
Sys.which("gcc.exe")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
library("RMySQL")
install.packages("sqldf")
library("sqldf")
connect <- dbConnect(MySQL())
read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
acs <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
sqldf("select pwgtp1 from acs where AGEP \lt< 50")
sqldf("select pwgtp1 from acs where AGEP \lt< 50")
sqldf("select pwgtp1 from acs where AGEP /lt< 50")
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
library(XML)
htmlCode <- htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = T)
htmlCode
htmlCode[1]
htmlCode[[1]]
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
htmlCode[1]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[1000])
nchar(htmlCode[100])
forFile <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
forFile
sum(forFile[,4])
forFile[,3]
forFile[1]
forFile[2]
head(forFile)
forFile[[1]]
head(forFile)
forFile[[1,1]]
forFile[[,1]]
forFile[[1,1,1]]
forFile[[1,1,1,1]]
forFile[[1,1]][[1]]
forFile[[1,1]][[1]][[1]]
forFile[[1,2]]
forFile[[1]][[1]]
forFile[[1]][[2]]
head(forFile)
dim(forFile)
forFile[1000]
forFile[1000,]
names(forFile)
forFile["03JAN1990"]
forFile["03JAN1990",]
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",sep = "     ")
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",sep = "")
forFile[3]
head(forFile)
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",sep = "    ")
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",sep = "     ")
forFile <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
forFile <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip = 1)
forFile <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip = 2)
forFile <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip = 4)
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",sep = "",skip = 1)
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",sep = "",skip = 2)
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",sep = "")
names(forFile)
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",sep = "",skip = 1)
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip = 1)
names(forFile)
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip = 1,sep = "......")
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip = 1,sep = "")
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip = 1,sep = ".")
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip = 2)
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip = 2,sep = 2)
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip = 2,sep = "")
forFile <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip = 3,sep = "")
names(forFile)
head(forFile)
forFile <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths = c(9,13,13,13,13),skip = 3)
names(forFile)
forFile <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths = c(9,13,13,13,13),skip = 2)
names(forFile)
head(forFile)
forFile <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths = c(9,13,13,13,13),skip = 2,header = TRUE)
forFile <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths = c(9,13,13,13,13),skip = 2,header = TRUE)
forFile <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths = c(9,13,13,13,13),skip = 3)
names(forFile)
head(forFile)
forFile <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths = c(9,13,13,13,13),skip = 1)
names(forFile)
head(forFile)
forFile <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths = c(9,13,13,13,13),skip = 3)
head(forFile)
forFile <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths = c(9,13,13,13,13),skip = 4)
head(forFile)
forFile <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths = c(9,9,4,9,4,9,4,9,4),skip = 4)
head(forFile)
forFile <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths = c(9,9,4,9,4,9,4,9,4),skip = 4,sep = "")
forFile <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths = c(9,9,4,9,4,9,4,9,4),skip = 4)
head(forFile)
sum(forFile[4])
forFile[4]
head(forFile)
head(forFile[5])
head(forFile[2])
forFile <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths = c(10,9,4,9,4,9,4,9,4),skip = 4)
head(forFile[2])
head(forFile)
sum(forFile[4])
sum(forFile[9])
library(swirl)
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mmydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
print(tbl_df)
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cram,-(X:size))
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran,size>=100500,r_os=="linux-gnu")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, contry,desc(r_version),ip_id)
arrange(cran2, country,desc(r_version),ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran,size_mb = size/2^20)
mutate(cran3,size_mb = size/2^20)
mutate(cran3,size_mb = size/2^20,size_gb = size_mb/2^10)
mutate(cran3,correct_size = size*1000)
mutate(cran3,correct_size = size+1000)
summarize(cran,avg_bytes=mean(size))
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs
| = 0.99)
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum,count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum,unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique,desc(count))
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit
submit()
View(result3)
submit()
submit()
submit()
submit()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c("sex","class"))
submit()
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
submit()
library(readr)
parse_number("class5")
?mutate
submit()
students4
submit()
?unique
submit()
submit()
passed
failed
mutate(passed,status="passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
bind_rows(passed,failed)
sat
submit
submit()
submit()
setwd("D:/Producao/R Workspace/Project3")
source("run_analysis.R")
source("run_analysis.R")
?group_by
source("run_analysis.R")
test = tbl_df(test)
test = tbl_df(test)
test
source("run_analysis.R")
test
?group_by
?summarise
?summarise_all
source("run_analysis.R")
View(test)
rm(test)
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
